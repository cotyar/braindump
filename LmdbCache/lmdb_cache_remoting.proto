syntax = "proto3";

package LmdbCache;

option csharp_namespace = "LmdbCache";

//import "google/protobuf/empty.proto";
// import "google/protobuf/timestamp.proto";

// Interface exported by the server.
service LmdbCacheService {

  rpc Add(AddRequest) returns (AddResponse) {}

  rpc Delete(DeleteRequest) returns (DeleteResponse) {}

  rpc Copy(CopyRequest) returns (CopyResponse) {}

  rpc Get(GetRequest) returns (GetResponse) {}

  rpc ContainsKeys(GetRequest) returns (ContainsKeysResponse) {}

  rpc ListKeys(KeyListRequest) returns (stream KeyListResponse) {}

  rpc ListKeyValues(KeyListRequest) returns (stream KeyValueListResponse) {}
}

message Empty {
}

message Timestamp {
  uint64 ticksOffsetUtc = 1;
}

message VectorClock {
  map<string, uint64> nodes = 1;
  uint64 ticksOffsetUtc     = 2;
}

message AddRequest {
  message AddRequestEntry {
    string    key    = 1;
    Timestamp expiry = 2; 
    bytes     value  = 3;
  }
  bool overrideExisting            = 1;
  repeated AddRequestEntry entries = 2;
}

message AddResponse {
  enum AddResult {
    KEY_ADDED           = 0;
    KEY_UPDATED         = 1;
    KEY_ALREADY_EXISTS  = 2;
    FAILURE             = 3;
  }
  repeated AddResult results = 1;
}

message DeleteRequest {
  repeated string keys   = 1;
}

message DeleteResponse {
  enum DeleteResult {
    SUCCESS             = 0;
    NOT_FOUND           = 1;
    FAILURE             = 2;
  }
  repeated DeleteResult results = 1;
}

message GetRequest {
  repeated string keys    = 1;
}

message GetResponse {
  message GetResponseEntry {
    enum GetResult {
      SUCCESS             = 0;
      NOT_FOUND           = 1;
      FAILURE             = 2;
    }
    GetResult result = 1;
    bytes     value  = 2;
  }
  repeated GetResponseEntry results = 1;
}

message ContainsKeysResponse {
  repeated bool results = 1;
}

message CopyRequest {
  message CopyRequestEntry {
    string    keyFrom = 1;
    Timestamp expiry  = 2; 
    string    keyTo   = 3;
  }
  repeated CopyRequestEntry entries = 1;
}

message CopyResponse {
  enum CopyResult {
    SUCCESS             = 0;
    FROM_KEY_NOT_FOUND  = 1;
    TO_KEY_EXISTS       = 2;
    FAILURE             = 3;
  }
  repeated CopyResult results = 1;
}

message KeyListRequest {
  string keyPrefix = 1;
  uint32 pageSize  = 2;
  uint32 page      = 3;
}

message KeyListResponse {
  string key    = 1;
  // Timestamp expiry = 2;
}

message KeyValueListResponse {
  string key    = 1;
  // Timestamp expiry = 2;
  bytes  value  = 3;
}

///////////////////////////////

// Interface exported by the server.
service SyncService {

  rpc Add(AddRequest) returns (AddResponse) {}

  rpc Delete(DeleteRequest) returns (DeleteResponse) {}

  rpc Copy(CopyRequest) returns (CopyResponse) {}
}

///////////////////////////////

// WriteLog types.

message WriteLogEvent {
  message Added { // TODO: Add a value hash?
    string      key     = 1;
  }
  message Updated {
    string      key     = 1;
  }
  message Deleted {
    string      key     = 1;
  }
  message Expired {
    string      key     = 1;
  }

  VectorClock clock   = 1; 
  oneof loggedEvent {
    Added   added     = 5; 
    Updated updated   = 6;
    Deleted deleted   = 7;
    Expired expired   = 8; 
  }
}