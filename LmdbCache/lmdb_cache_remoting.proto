syntax = "proto3";

package LmdbCache;

option csharp_namespace = "LmdbCache";

//import "google/protobuf/empty.proto";
// import "google/protobuf/timestamp.proto";

// Interface exported by the server.
service LmdbCacheService {

  rpc Add(AddRequest) returns (AddResponse) {}

  rpc AddOrUpdate(AddRequest) returns (AddOrUpdateResponse) {}

  rpc AddStream(stream AddStreamRequest) returns (AddResponse) {}

  rpc AddOrUpdateStream(stream AddStreamRequest) returns (AddOrUpdateResponse) {}

  rpc Delete(DeleteRequest) returns (DeleteResponse) {}

  rpc Get(GetRequest) returns (GetResponse) {}

  rpc GetStream(GetRequest) returns (stream GetStreamResponse) {}

  rpc ListKeys(KeyListRequest) returns (stream KeyListResponse) {}

  rpc ListKeyValues(KeyListRequest) returns (stream KeyValueListResponse) {}
}

message Empty {
}

message AddRequest {
  string    key    = 1;
  // Timestamp expiry = 2; 
  bytes     value  = 3;
}

message AddResponse {
  enum AddResult {
    SUCCESS             = 0;
    KEY_ALREADY_EXISTS  = 1;
    FAILURE             = 2;
  }
  AddResult result = 1;
}

message AddOrUpdateResponse {
  enum AddOrUpdateResult {
    KEY_ADDED           = 0;
    KEY_UPDATED         = 1;
    FAILURE             = 2;
  }
  AddOrUpdateResult result = 1;
}

message AddStreamRequest {
  message Header {
    string    key    = 1;
    // Timestamp expiry = 2; 
  }
  message DataChunk {
    uint32 index    = 1;
    bytes  value    = 2; 
  }
  oneof msg {
    Header header   = 1;
    DataChunk chunk = 2;
  }
}

message KeyListRequest {
  string keyPrefix = 1;
  uint32 pageSize  = 2;
}

message KeyListResponse {
  string key    = 1;
  // Timestamp expiry = 2;
}

message KeyValueListResponse {
  string key    = 1;
  // Timestamp expiry = 2;
  bytes  value  = 3;
}

message GetRequest {
  string key    = 1;
}

message GetResponse {
  enum GetResult {
    SUCCESS             = 0;
    NOT_FOUND           = 1;
    FAILURE             = 2;
  }
  GetResult result = 1;
  bytes     value  = 2;
}

message GetStreamResponse {
  enum GetResult {
    SUCCESS             = 0;
    NOT_FOUND           = 1;
    FAILURE             = 2;
  }
  GetResult result = 1;
  uint32    index  = 2;
  bytes     value  = 3;
}

message DeleteRequest {
  string key    = 1;
}

message DeleteResponse {
  enum DeleteResult {
    SUCCESS             = 0;
    NOT_FOUND           = 1;
    FAILURE             = 2;
  }
  DeleteResult result = 1;
}
